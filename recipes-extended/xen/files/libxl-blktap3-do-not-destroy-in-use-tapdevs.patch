Index: xen-4.9.0/tools/libxl/libxl_blktap3.c
===================================================================
--- xen-4.9.0.orig/tools/libxl/libxl_blktap3.c
+++ xen-4.9.0/tools/libxl/libxl_blktap3.c
@@ -103,7 +103,33 @@ char *libxl__blktap_devpath(libxl__gc *g
     return NULL;/*revert-back-changes*/
 }
 
-int libxl__device_destroy_tapdisk(libxl__gc *gc, const char *be_path)
+static bool tapdev_is_shared(libxl__gc *gc, const char *params)
+{
+    char **domids, **vbds;
+    char *tp;
+    unsigned int count1, count2, i, j;
+
+    /* List all the domids that have vhd backends */
+    domids = libxl__xs_directory(gc, XBT_NULL, "backend/vbd3", &count1);
+    if (domids) {
+        for (i = 0; i < count1; ++i) {
+            /* List all the vbds for that domid */
+            vbds = libxl__xs_directory(gc, XBT_NULL, libxl__sprintf(gc, "backend/vbd3/%s", domids[i]), &count2);
+            if (vbds) {
+                for (j = 0; j < count2; ++j) {
+                    /* If the params are the same, we have a match */
+                    tp = libxl__xs_read(gc, XBT_NULL, libxl__sprintf(gc, "backend/vbd3/%s/%s/tapdisk-params", domids[i], vbds[j]));
+                    if (tp != NULL && !strcmp(tp, params))
+                        return true;
+                }
+            }
+        }
+    }
+
+    return false;
+}
+
+int libxl__device_destroy_tapdisk(libxl__gc *gc, const char *be_path, uint32_t domid)
 {
     char *disk;
     int err;
@@ -125,6 +151,11 @@ int libxl__device_destroy_tapdisk(libxl_
         LOGEV(ERROR, -err, "Unable to find type %s disk %s", be_path, disk);
         return ERROR_FAIL;
     }
+    /* We're using the tapdev. If anybody else also is, we can't destroy it! */
+    if (tapdev_is_shared(gc, be_path)) {
+        LOG(DEBUG, "Not destroying tapdev%d, another VM uses it", tap.minor);
+        return 0;
+    }
 
     err = tap_ctl_destroy(tap.pid, tap.minor, 0, NULL);
     if (err < 0) {
