Index: git/tools/libxl/libxl_utils.c
===================================================================
--- git.orig/tools/libxl/libxl_utils.c
+++ git/tools/libxl/libxl_utils.c
@@ -1309,8 +1309,11 @@ int libxl_update_state(libxl_ctx *ctx, u
 {
     int nb_domains, i;
     uint32_t domid, target_domid;
+    char *domname;
     char path[sizeof("/state/00000000-0000-0000-0000-000000000000/state")];
     char uuid[37];
+    char ndvm_name[] = "Network";
+    char ndvm_state[] = "running";
     libxl_dominfo *dominfo;
     libxl_uuid *xl_uuid = NULL;
 
@@ -1336,11 +1339,25 @@ int libxl_update_state(libxl_ctx *ctx, u
     uuid_unparse(xl_uuid->uuid, uuid);
     sprintf(path, "/state/%s/state", uuid);
 
-    if (!xs_write(ctx->xsh, XBT_NULL, path, state, strlen(state)))
+    domname = libxl_domid_to_name(ctx, domid_in);
+    if(!strcmp(domname, ndvm_name) && !strcmp(state, ndvm_state))
+    {
+        /* give permission for ndvm to update the state after Open vSwitch initialization */
+
+        struct xs_permissions ndvm_perms[2];
+        ndvm_perms[0].id = 0;
+        ndvm_perms[0].perms = XS_PERM_READ;
+        ndvm_perms[1].id = domid_in;
+        ndvm_perms[1].perms = XS_PERM_NONE;
+
+        xs_set_permissions(ctx->xsh, XBT_NULL, path, ndvm_perms, ARRAY_SIZE(ndvm_perms));
+    }
+    else if(!xs_write(ctx->xsh, XBT_NULL, path, state, strlen(state)))
     {
         fprintf(stderr, "Failed to write the xenstore node: %s with state: %s\n", path, state);
     }
     free(dominfo);
+    free(domname);
     return 0;
 }
 
